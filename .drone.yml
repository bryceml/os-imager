---
kind: pipeline
name: Lint

platform:
  os: linux
  arch: amd64

steps:
- name: Arch
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=arch --distro-version=lts
  depends_on:
  - clone

- name: Amazon 1
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=1
  depends_on:
  - clone

- name: Amazon 2
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=2
  depends_on:
  - clone

- name: CentOS 6
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=6
  depends_on:
  - clone

- name: CentOS 7
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=7
  depends_on:
  - clone

- name: CentOS 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=8
  depends_on:
  - clone

- name: Debian 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=8
  depends_on:
  - clone

- name: Debian 9
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=9
  depends_on:
  - clone

- name: Debian 10
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=10
  depends_on:
  - clone

- name: Fedora 30
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=30
  depends_on:
  - clone

- name: Fedora 31
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=31
  depends_on:
  - clone

- name: Opensuse 15
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=opensuse --distro-version=15
  depends_on:
  - clone

- name: Ubuntu 1604
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1604
  depends_on:
  - clone

- name: Ubuntu 1804
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1804
  depends_on:
  - clone

- name: Windows 2016
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2016
  depends_on:
  - clone

- name: Windows 2019
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2019
  depends_on:
  - clone

---
kind: pipeline
name: Arch (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 23 seconds; sleep 23'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 69 seconds; sleep 69'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 115 seconds; sleep 115'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 161 seconds; sleep 161'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 207 seconds; sleep 207'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=lts --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 1 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 33 seconds; sleep 33'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 99 seconds; sleep 99'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 165 seconds; sleep 165'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 231 seconds; sleep 231'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 297 seconds; sleep 297'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 2 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 43 seconds; sleep 43'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 129 seconds; sleep 129'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 215 seconds; sleep 215'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 301 seconds; sleep 301'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 387 seconds; sleep 387'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 6 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 53 seconds; sleep 53'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 159 seconds; sleep 159'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 265 seconds; sleep 265'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 371 seconds; sleep 371'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 477 seconds; sleep 477'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 7 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 63 seconds; sleep 63'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 189 seconds; sleep 189'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 315 seconds; sleep 315'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 441 seconds; sleep 441'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 567 seconds; sleep 567'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 73 seconds; sleep 73'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 219 seconds; sleep 219'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 365 seconds; sleep 365'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 511 seconds; sleep 511'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 657 seconds; sleep 657'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=8 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 83 seconds; sleep 83'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 249 seconds; sleep 249'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 415 seconds; sleep 415'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 581 seconds; sleep 581'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 747 seconds; sleep 747'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 9 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 93 seconds; sleep 93'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 279 seconds; sleep 279'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 465 seconds; sleep 465'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 651 seconds; sleep 651'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 837 seconds; sleep 837'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 10 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 103 seconds; sleep 103'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 309 seconds; sleep 309'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 515 seconds; sleep 515'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 721 seconds; sleep 721'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 927 seconds; sleep 927'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=10 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 30 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 113 seconds; sleep 113'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 339 seconds; sleep 339'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 565 seconds; sleep 565'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 791 seconds; sleep 791'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 1017 seconds; sleep 1017'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 31 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 123 seconds; sleep 123'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 369 seconds; sleep 369'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 615 seconds; sleep 615'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 861 seconds; sleep 861'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 1107 seconds; sleep 1107'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=31 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Opensuse 15 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 43 seconds; sleep 43'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 129 seconds; sleep 129'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 215 seconds; sleep 215'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 301 seconds; sleep 301'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 387 seconds; sleep 387'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1604 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 33 seconds; sleep 33'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 99 seconds; sleep 99'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 165 seconds; sleep 165'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 231 seconds; sleep 231'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 297 seconds; sleep 297'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1804 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 23 seconds; sleep 23'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 69 seconds; sleep 69'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 115 seconds; sleep 115'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 161 seconds; sleep 161'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 207 seconds; sleep 207'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2016 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 13 seconds; sleep 13'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 39 seconds; sleep 39'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 65 seconds; sleep 65'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 91 seconds; sleep 91'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 117 seconds; sleep 117'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2019 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: 2017.7
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 13 seconds; sleep 13'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2018.3
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 39 seconds; sleep 39'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: 2019.2
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 65 seconds; sleep 65'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: neon
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 91 seconds; sleep 91'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: develop
  image: hashicorp/packer
  commands:
  - sh -c 'echo Sleeping 117 seconds; sleep 117'
  - apk --no-cache add make curl grep gawk sed python3
  - pip3 install --upgrade pip
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - clone

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2017.7-manifest.json | jq
  - export name_filter=$(cat 2017.7-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2018.3-manifest.json | jq
  - export name_filter=$(cat 2018.3-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat 2019.2-manifest.json | jq
  - export name_filter=$(cat 2019.2-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat neon-manifest.json | jq
  - export name_filter=$(cat neon-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update python3 jq
  - pip3 install --upgrade pip
  - pip3 install -r requirements/py3.6/base.txt
  - cat develop-manifest.json | jq
  - export name_filter=$(cat develop-manifest.json | jq -r ".builds[].custom_data.ami_name")
  - "echo \"Name Filter: $name_filter\""
  - inv cleanup-aws --region=$AWS_DEFAULT_REGION --name-filter=$name_filter --assume-yes --num-to-keep=1
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: signature
hmac: 8ccfdf7739e12a38f858910f452fb5863932c3ea8d6d580b5d06edd2f0700c04

...
